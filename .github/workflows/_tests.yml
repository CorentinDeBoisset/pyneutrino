name: Backend and frontend tests

on:
  workflow_call:

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: rootpwd
          POSTGRES_USER: root
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 127.0.0.1:5432:5432
      redis:
        image: redis:7-alpine
        ports:
          - 127.0.0.1:6379:6379

    steps:
      - name: Install the PostgreSQL client
        run: sudo apt update && sudo apt install -y postgresql-client
      - name: Setup the test database
        run: |
          PGPASSWORD=rootpwd psql -h localhost -p 5432 -U root \
          -c "CREATE USER pytest PASSWORD 'pytestpwd';" \
          -c "CREATE DATABASE pytest OWNER pytest;"
      - name: Pull the code
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: 'poetry'
      - run: poetry install
      - run: poetry run tox run -e py312


  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Pull the code
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend-src/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend-src

      - name: Run linting
        run: npm run lint
        working-directory: ./frontend-src

      # - name: Run Tests
      #   run: npm test
      #   working-directory: ./frontend-src
